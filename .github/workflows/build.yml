on:
  push:
    branches: [ "ci/cd" ]
jobs:
  ios-build:
    name: iOS CI/CD Build
    permissions: write-all
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: '9.0.4' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - uses: sinoru/actions-setup-xcode@v1.1.2
        with:
          xcode-version: '11.2.1' # Exact version of a Xcode version to use
          apple-id: ${{ secrets.EXPO_APPLE_ID }} # Apple ID to download from Apple Developer when Xcode not available in local
          apple-id-password: ${{ secrets.EXPO_APPLE_PASSWORD }}
      - name: Install Expo CLI # Install the latest version of expo-cli
        run: npm install -g expo-cli
      - name: Install deps
        run: yarn install
      - name: Build iOS app
        run: expo build:ios
        env:
            EXPO_APPLE_ID: ${{secrets.EXPO_APPLE_ID}}
            EXPO_APPLE_ID_PASSWORD: ${{secrets.EXPO_APPLE_PASSWORD}} 

  android-build:
    name: Android CI/CD Build
    permissions: write-all
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - uses: actions/setup-java@v1.4.3
        with:
          java-version: '9.0.4' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - name: Install Expo CLI # Install the latest version of expo-cli
        run: npm install -g expo-cli
      - name: Install deps
        run: yarn install
      - name: Build Android APK Bundle
        run: expo build:android